<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ptt.dao.ManagerMapper">
    <resultMap id="Base_Column" type="java.util.Map">
        <id property="task_name" column="task_name"/>
        <id property="name" column="name"/>
        <id property="task_end_time" column="task_end_time"/>
        <id property="task_begin_time" column="task_begin_time"/>
        <id property="id" column="id"/>
        <id property="username" column="username"/>
        <id property="task_state" column="task_state"/>
    </resultMap>
    <select id="findTaskEmp" resultMap="Base_Column">
        select * from t_emp e,t_task t where t.emp_id=e.username
    </select>
    <select id="findAll" resultType="com.ptt.vo.Emp">
        select * from t_emp
    </select>
    <select id="findAdjustList" resultType="java.util.HashMap">
        SELECT * FROM t_emp e,t_task t
        <where>
            t.emp_id = e.username AND t.task_state = '未实施'
            <if test="id!= null">
                id=#{id}
            </if>
            <if test="task_name!= null">
                task_name=#{task_name}
            </if>
            <if test="name!= name">
                name=#{name}
            </if>
            <if test="task_begin_time!= null">
                task_begin_time=#{task_begin_time}
            </if>
            <if test="task_end_time!= null">
                task_end_time=#{task_end_time}
            </if>
            <if test="task_state!= null">
                task_state=#{task_state}
            </if>
            <if test="task_description!= null">
                task_description=#{task_description}
            </if>
        </where>
    </select>
    <select id="findPlanById" parameterType="java.lang.String" resultType="com.ptt.vo.Plan">
        select * from t_plan where task_id = #{task_id,javaType=String}
    </select>
    <select id="findPlanByPlanId" parameterType="java.lang.String" resultType="com.ptt.vo.Plan">
        select * from t_plan where id = #{id,javaType=String}
    </select>
    <select id="findTaskByPlanId" parameterType="java.lang.String" resultType="com.ptt.vo.Task">
        select * from t_task where id = #{id,javaType=String}
    </select>
    <select id="findUserByName" parameterType="java.lang.String" resultType="com.ptt.vo.Emp">
        select * from t_emp where name =#{name,javaType=String}
    </select>

    <parameterMap id="taskMessage" type="java.util.HashMap">
        <parameter property="task_name"/>
        <parameter property="task_begin_time"/>
        <parameter property="task_end_time"/>
        <parameter property="task_description"/>
        <parameter property="task_state"/>
        <parameter property="staff_id"/>
        <parameter property="emp_id"/>
    </parameterMap>
    <insert id="addTask" parameterMap="taskMessage">
        insert into t_task (task_name,task_begin_time,task_end_time,task_description,task_state,staff_id,emp_id)
        values (#{task_name},#{task_begin_time},#{task_end_time},#{task_description},#{task_state},#{staff_id},#{emp_id})
    </insert>
    <select id="adjustSave" parameterType="map">
        update t_task set task_name = #{task_name},task_begin_time=#{task_begin_time},task_end_time=#{task_end_time},task_description=#{task_description},task_state=#{task_state},emp_id= (select username from t_emp where name = #{name}) where id=#{id}
    </select>
    <delete id="deleteTaskByTaskName" parameterType="java.lang.String">
        delete from t_task where task_name = #{task_name,javaType=String}
    </delete>
    <select id="findUserById" parameterType="java.lang.String" resultType="com.ptt.vo.Emp">
        select * from t_emp where username =#{username,javaType=String}
    </select>
    <update id="updateEmp" parameterType="com.ptt.vo.Emp">
        update t_emp set username=#{username},name=#{name},password=#{password},sex=#{sex},birthday=#{birthday},hire_date=#{hire_date},position=#{position},qualification=#{qualification},professional=#{professional},experience=#{experience},flag=#{flag} where username=#{username}
    </update>
</mapper>